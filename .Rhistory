bins = 15, alpha = 0.5, data = ThatBoyJoy
) # Finally! Something worth looking at.
m <- ggplot(faithful, aes(x = eruptions, y = waiting)) +
geom_point() +
xlim(0.5, 6) +
ylim(40, 110)
m + geom_density_2d()
m + stat_density_2d(aes(fill = ..level..), geom = "polygon")
set.seed(4393)
dsmall <- diamonds[sample(nrow(diamonds), 1000), ]
d <- ggplot(dsmall, aes(x, y))
# If you map an aesthetic to a categorical variable, you will get a
# set of contours for each value of that variable
d + geom_density_2d(aes(colour = cut))
# If we turn contouring off, we can use use geoms like tiles:
d + stat_density_2d(geom = "raster", aes(fill = ..density..), contour = FALSE)
# Or points:
d + stat_density_2d(geom = "point", aes(size = ..density..), n = 20, contour = FALSE)
d + geom_density_2d(aes(colour = cut))
d + stat_density_2d(geom = "raster", aes(fill = ..density..), contour = FALSE)
colnames(faithful)
m + stat_density_2d(aes(fill = ..level..), geom = "polygon")
m + stat_density_2d(geom = "polygon")
dim(LA2014)
dim(eruptions)
dim(eruptions)
dim(faithful)
LA2014 = LA2014[1:50000,]
m = ggplot(LA2014, aes(x = long, y = lat))
m
geom_point()
m = ggplot(LA2014, aes(x = long, y = lat)) +
geom_point()
2+2
m = ggplot(LA2014, aes(LA2014,x = long, y = lat)) +
geom_point()
m = ggplot(LA2014, aes(x = long, y = lat)) +
geom_point()
colnames(2014)
dim(LA2014)
colnames(LA2014)
m <- ggplot(faithful, aes(x = eruptions, y = waiting)) +
geom_point()
m = ggplot(LA2014, aes(x = long, y = lat)) +
geom_point()
m
m + geom_density_2d()
m + geom_density_2d(geom = "point")
m <- ggplot(faithful, aes(x = eruptions, y = waiting)) +
geom_point() +
xlim(0.5, 6) +
ylim(40, 110)
m + geom_density_2d()
a = ggplot(LA2014, aes(x = long, y = lat)) +
geom_point()
a + geom_density_2d(geom = "point")
a + geom_density_2d()
a + stat_density_2d(aes(fill = ..level..), geom = "polygon")
help(geom_density_2d)
a + geom_density_2d(n = 100)
a + geom_density_2d(n = 1000)
m + geom_density_2d(n = 1)
m + geom_density_2d(n = 2)
m + geom_density_2d(n = 3)
m + geom_density_2d(n = 4)
m + geom_density_2d(n = 100)
m + geom_density_2d(n = 1000)
m + geom_density_2d(n = 10)
a + geom_density_2d(n = 10)
a + geom_density_2d(n = 9)
a + geom_density_2d(n = 1)
a + geom_density_2d(n = 2)
a + geom_density_2d(n = 3)
a + geom_density_2d(n = 4)
a + geom_density_2d(n = 5)
a + geom_density_2d(n = 6)
a + geom_density_2d(n = 7)
a + geom_density_2d(n = 8)
a + geom_density_2d(n = 9)
a + geom_density_2d(n = 10)
a + geom_density_2d(n = 11)
a + geom_density_2d(n = 20)
a + geom_density_2d(n = 25)
a + geom_density_2d(n = 50)
a + geom_density_2d(n = 100)
a + geom_density_2d(n = 101)
a + geom_density_2d(n = 102)
a + geom_density_2d(n = 10)
a + stat_density_2d(n = 10, aes(fill = ..level..), geom = "polygon")
a + stat_bin2d(
aes(x = long, y = lat),
bins = 15, alpha = 0.5, data = LA2014
) # Finally! Something worth looking at.
a + stat_bin2d(
aes(x = long, y = lat),
bins = 20, alpha = 0.5, data = LA2014
) # Finally! Something worth looking at.
a + stat_bin2d(
aes(x = long, y = lat),
bins = 100, alpha = 0.5, data = LA2014
) # Finally! Something worth looking at.
a + stat_bin2d(
aes(x = long, y = lat),
bins = 50, alpha = 0.5, data = LA2014
) # Finally! Something worth looking at.
a = ggmap(get_map("Los Angeles"))
a
a + stat_bin2d(
aes(x = long, y = lat),
bins = 50, alpha = 0.5, data = LA2014
) # Finally! Something worth looking at.
a = ggmap(get_map("Los Angeles"), zoom = 3)
a
a = ggmap(get_map("Los Angeles", zoom = 3))
a
a = ggmap(get_map("Los Angeles", zoom = 8))
a
a + stat_bin2d(
aes(x = long, y = lat),
bins = 50, alpha = 0.5, data = LA2014
) # Finally! Something worth looking at.
a + stat_bin2d(
aes(x = long, y = lat),
bins = 50, alpha = 0.5, data = LA2014
) # Finally! Something worth looking at.
a + geom_point()
a = ggmap(get_map("Los Angeles", zoom = 7), data = LA2014, aes(x = long, y = lat))
a + geom_point()
a + geom_point(data = LA2014, aes(x = long, y = lat))
a + geom_point(data = LA2014, aes(x = lat, y = long))
a = ggmap(get_map("Los Angeles", zoom = 7))
a + stat_bin2d(
aes(x = long, y = lat),
bins = 50, alpha = 0.5, data = LA2014
) # Finally! Something worth looking at.
a = ggmap(get_map("Los Angeles", zoom = 3))
a + stat_bin2d(
aes(x = long, y = lat),
bins = 50, alpha = 0.5, data = LA2014
) # Finally! Something worth looking at.
a = ggmap(get_map("Los Angeles", zoom = 1))
a + stat_bin2d(
aes(x = long, y = lat),
bins = 50, alpha = 0.5, data = LA2014
) # Finally! Something worth looking at.
a = ggmap(get_map("Los Angeles", zoom = 20))
a + stat_bin2d(
aes(x = long, y = lat),
bins = 50, alpha = 0.5, data = LA2014
) # Finally! Something worth looking at.
a = ggmap(get_map("Los Angeles", zoom = 4))
a + stat_bin2d(
aes(x = long, y = lat),
bins = 50, alpha = 0.5, data = LA2014
) # Finally! Something worth looking at.
a + stat_bin2d(
aes(x = long, y = lat),
bins = 50, alpha = 0.5, data = LA2014
) # Finally! Something worth looking at.
a = ggmap(get_map("Los Angeles", zoom = 7))
a + stat_bin2d(
aes(x = long, y = lat),
bins = 50, alpha = 0.5, data = LA2014
) # Finally! Something worth looking at.
library(wordcloud)
library(tm)
source("functions.R")
happy_tweets = read.csv(file = paste(storage.directory, "happy_tweets_2014", sep = ""), nrows = 150000, header = TRUE, colClasses =
c("character", "character", "character", "numeric", "numeric", "POSIXct"))
dim(happy_tweets)
head(happy_tweets)
sad_tweets = read.csv(file = paste(storage.directory, "sad_tweets_2014", sep = ""), nrows = 50000, header = TRUE, colClasses =
c("character", "character", "character", "numeric", "numeric", "POSIXct"))
dim(sad_tweets)
# clean tweets
#  ALL tokenization is turned off for this step to avoid getting a hunge "USERNAME" in the middle of the word cloud
happy_tweets$clean = clean.tweets(happy_tweets$text, usernameToken = "", hashToken = "", sadToken = "", happyToken = "")
sad_tweets$clean =   clean.tweets(sad_tweets$text,   usernameToken = "", hashToken = "", sadToken = "", happyToken = "")
happy_corpus = Corpus(VectorSource(happy_tweets$clean))
sad_corpus = Corpus(VectorSource(sad_tweets$clean))
#Remove stop words
happy_corpus <- tm_map(happy_corpus, function(x)removeWords(x,stopwords())) # ~2 minutes
sad_corpus <- tm_map(sad_corpus, function(x)removeWords(x,stopwords())) # ~1 minute
wordcloud(sad_corpus, max.words = 200) # ~3 minutes
happy_corpus = Corpus(VectorSource(happy_tweets$clean))
happy_corpus <- tm_map(happy_corpus, function(x)removeWords(x,stopwords())) # ~2 minutes
wordcloud(happy_corpus, max.words = 200) # ~4 minutes
wordcloud(happy_corpus, max.words = 200) # ~4 minutes
wordcloud(happy_corpus, max.words = 200) # ~4 minutes
help(wordcloud)
wordcloud(sad_corpus, max.words = 200, ordered.colors = TRUE) # ~3 minutes
wordcloud(sad_corpus, max.words = 200, c(4, .5), random.color = TRUE) # ~3 minutes
wordcloud(sad_corpus, max.words = 200, c(4, .5), random.color = TRUE) # ~3 minutes
wordcloud(sad_corpus, max.words = 200,
c(4,.5),
random.color = TRUE,
vfont=c("serif","plain")) # ~3 minutes
wordcloud(sad_corpus, max.words = 200,
#c(4,.5),
random.color = TRUE,
vfont=c("serif","plain")) # ~3 minutes
wordcloud(sad_corpus, max.words = 200,
#c(4,.5),
random.color = TRUE,
vfont=c("sans-serif","plain")) # ~3 minutes
wordcloud(sad_corpus, max.words = 200,
#c(4,.5),
color = c("red", "black")
random.color = TRUE) # ~3 minutes
wordcloud(sad_corpus, max.words = 200,
#c(4,.5),
color = c("red", "black"),
random.color = TRUE) # ~3 minutes
wordcloud(sad_corpus, max.words = 200,
#c(4,.5),
color = c("black", "gray"),
random.color = TRUE) # ~3 minutes
wordcloud(sad_corpus, max.words = 200,
#c(4,.5),
color = c("black", "dark.gray", "gray"),
random.color = TRUE) # ~3 minutes
help("color")
wordcloud(sad_corpus, max.words = 200,
#c(4,.5),
color = c("black", "dark gray", "gray"),
random.color = TRUE) # ~3 minutes
wordcloud(sad_corpus, max.words = 200,
#c(4,.5),
color = c(rep("black", 50), rep("dark gray", 75), rep("gray", 75)),
random.color = TRUE) # ~3 minutes
wordcloud(sad_corpus, max.words = 200,
#c(4,.5),
color = c(rep("black", 50), rep("dark gray", 75), rep("gray", 75)),
random.color = FALSE) # ~3 minutes
wordcloud(sad_corpus, max.words = 200,
#c(4,.5),
color = c(rep("gray", 75), rep("dark gray", 75), rep("black", 50)),
random.color = FALSE) # ~3 minutes
wordcloud(sad_corpus, max.words = 200,
c(3,.5),
#color = c(rep("gray", 75), rep("dark gray", 75), rep("black", 50)),
random.color = FALSE) # ~3 minutes
wordcloud(sad_corpus, max.words = 200,
scale = c(3, .5),
#color = c(rep("gray", 75), rep("dark gray", 75), rep("black", 50)),
random.color = FALSE) # ~3 minutes
wordcloud(sad_corpus, max.words = 200,
scale = c(4, 1),
#color = c(rep("gray", 75), rep("dark gray", 75), rep("black", 50)),
random.color = FALSE) # ~3 minutes
wordcloud(sad_corpus, max.words = 200,
scale = c(4, 1),
#color = c(rep("gray", 75), rep("dark gray", 75), rep("black", 50)),
random.order = FALSE) # ~3 minutes
wordcloud(sad_corpus, max.words = 200,
scale = c(4, 1),
color = c(rep("gray", 75), rep("dark gray", 75), rep("black", 50)),
random.order = FALSE) # ~3 minutes
wordcloud(sad_corpus, max.words = 200,
scale = c(4, 1),
color = c(rep("#AABBCC", 75), rep("dark gray", 75), rep("black", 50)),
random.order = FALSE) # ~3 minutes
wordcloud(sad_corpus, max.words = 200,
scale = c(4, 1),
color = c(rep("#123456", 75), rep("dark gray", 75), rep("black", 50)),
random.order = FALSE) # ~3 minutes
wordcloud(sad_corpus, max.words = 200,
scale = c(4, 1),
color = c(rep("#111111", 75), rep("dark gray", 75), rep("black", 50)),
random.order = FALSE) # ~3 minutes
wordcloud(sad_corpus, max.words = 200,
scale = c(4, 1),
color = c(rep("#11EE11", 75), rep("dark gray", 75), rep("black", 50)),
random.order = FALSE) # ~3 minutes
wordcloud(sad_corpus, max.words = 200,
scale = c(4, 1),
color = c(rep("#11EE11", 1), rep("dark gray", 1), rep("black", 1)),
random.order = FALSE) # ~3 minutes
wordcloud(sad_corpus, max.words = 200,
scale = c(4, 1),
color = c(rep("#999999", 1), rep("#BBBBBB", 1), rep("#FFFFFF", 1)),
random.order = FALSE) # ~3 minutes
wordcloud(sad_corpus, max.words = 200,
scale = c(4, 1),
color = c(rep("#999999", 1), rep("#BBBBBB", 1), rep("#EEEEEE", 1)),
random.order = FALSE) # ~3 minutes
wordcloud(sad_corpus, max.words = 200,
scale = c(4, 1),
color = c(rep("#111111", 1), rep("#666666", 1), rep("#AAAAAA", 1)),
random.order = FALSE) # ~3 minutes
wordcloud(sad_corpus, max.words = 200,
scale = c(4, 1),
color = c(rep("#AAAAAA", 1), rep("#666666", 1), rep("#111111", 1)),
random.order = FALSE) # ~3 minutes
wordcloud(sad_corpus, max.words = 200,
scale = c(4, 1),
color = c(rep("#AAAAAA", 1),
rep("#11EE11", 1),
rep("#666666", 1),
rep("#111111", 1)),
random.order = FALSE) # ~3 minutes
wordcloud(sad_corpus, max.words = 200,
scale = c(4, 1),
color = c(rep("#AAAAAA", 1),
rep("#11EE11", 1),
rep("#666666", 1),
rep("#EE1111", 1)),
random.order = FALSE) # ~3 minutes
wordcloud(sad_corpus, max.words = 200,
scale = c(4, 1),
color = c(rep("#AAAAAA", 1),
rep("#11EE11", 1),
rep("#666666", 1),
rep("#EEEEEE", 1)),
random.order = FALSE) # ~3 minutes
wordcloud(sad_corpus, max.words = 200,
scale = c(4, 1),
color = c(rep("#AAAAAA", 1),
rep("#888888", 1),
rep("#444444", 1),
rep("#111111", 1)),
random.order = FALSE) # ~3 minutes
wordcloud(sad_corpus, max.words = 200,
scale = c(4, 0.8),
color = c(rep("#AAAAAA", 1),
rep("#888888", 1),
rep("#444444", 1),
rep("#111111", 1)),
rot.per = 0
random.order = FALSE) # ~3 minutes
wordcloud(sad_corpus, max.words = 200,
scale = c(4, 0.8),
color = c(rep("#AAAAAA", 1),
rep("#888888", 1),
rep("#444444", 1),
rep("#111111", 1)),
rot.per=0,
random.order = FALSE) # ~3 minutes
wordcloud(sad_corpus, max.words = 200,
scale = c(4, 0.8),
color = c(rep("#AAAAAA", 1),
rep("#777777", 1),
rep("#555555", 1),
rep("#333333", 1),
rep("#111111")),
rot.per = 0,
random.order = FALSE) # ~3 minutes
wordcloud(happy_corpus, max.words = 200, # ~4 minutes
scale = c(4, 0.8),
color = c(rep("#AAAAAA", 1),
rep("#777777", 1),
rep("#555555", 1),
rep("#333333", 1),
rep("#111111")),
rot.per = 0,
random.order = FALSE)
wordcloud(sad_corpus, max.words = 200, # ~3 minutes
scale = c(4, 0.8),
color = c(rep("#AAAAAA", 1),
rep("#777777", 1),
rep("#555555", 1),
rep("#333333", 1),
rep("#111111")),
rot.per = 0.2,
random.order = FALSE)
wordcloud(sad_corpus, max.words = 200, # ~3 minutes
scale = c(4, 0.8),
color = c(rep("#AAAAAA", 1),
rep("#777777", 1),
rep("#555555", 1),
rep("#333333", 1),
rep("#111111")),
rot.per = 0.1,
random.order = FALSE)
wordcloud(sad_corpus, max.words = 200, # ~3 minutes
scale = c(4, 0.8),
color = c(rep("#AAAAAA", 1),
rep("#777777", 1),
rep("#555555", 1),
rep("#333333", 1),
rep("#111111")),
rot.per = 0.1,
random.order = FALSE)
wordcloud(happy_corpus, max.words = 200, # ~4 minutes
scale = c(4, 0.8),
color = c(rep("#AAAAAA", 1),
rep("#777777", 1),
rep("#555555", 1),
rep("#333333", 1),
rep("#111111")),
rot.per = 0.1,
random.order = FALSE)
wordcloud(happy_corpus, max.words = 200, # ~4 minutes
scale = c(5, 0.8),
color = c(rep("#AAAAAA", 1),
rep("#777777", 1),
rep("#555555", 1),
rep("#333333", 1),
rep("#111111")),
rot.per = 0.1,
random.order = FALSE)
wordcloud(sad_corpus, max.words = 200, # ~3 minutes
scale = c(5, 0.8),
color = c(rep("#AAAAAA", 1),
rep("#777777", 1),
rep("#555555", 1),
rep("#333333", 1),
rep("#111111")),
rot.per = 0.1,
random.order = FALSE)
wordcloud(happy_corpus, max.words = 200, # ~4 minutes
scale = c(5, 0.8),
color = c(rep("#AAAAAA", 1),
rep("#777777", 1),
rep("#555555", 1),
rep("#333333", 1),
rep("#111111")),
rot.per = 0.1,
random.order = FALSE)
wordcloud(sad_corpus, max.words = 200, # ~3 minutes
scale = c(5, 0.8),
color = c(rep("#AAAAAA", 1),
rep("#777777", 1),
rep("#555555", 1),
rep("#333333", 1),
rep("#111111")),
rot.per = 0.1,
random.order = FALSE)
wordcloud(happy_corpus, max.words = 200, # ~4 minutes
scale = c(5, 0.8),
color = c(rep("#AAAAAA", 1),
rep("#777777", 1),
rep("#555555", 1),
rep("#333333", 1),
rep("#111111")),
rot.per = 0.1,
random.order = FALSE)
wordcloud(sad_corpus, max.words = 200, # ~3 minutes
scale = c(5, 0.8),
color = c(rep("#AAAAAA", 1),
rep("#777777", 1),
rep("#555555", 1),
rep("#333333", 1),
rep("#111111")),
rot.per = 0.1,
random.order = FALSE)
wordcloud(happy_corpus, max.words = 200, # ~4 minutes
scale = c(5, 1),
color = c(rep("#AAAAAA", 1),
rep("#777777", 1),
rep("#555555", 1),
rep("#333333", 1),
rep("#111111")),
rot.per = 0.1,
random.order = FALSE)
wordcloud(sad_corpus, max.words = 200, # ~3 minutes
scale = c(5, 1),
color = c(rep("#AAAAAA", 1),
rep("#777777", 1),
rep("#555555", 1),
rep("#333333", 1),
rep("#111111")),
rot.per = 0.1,
random.order = FALSE)
wordcloud(happy_corpus, max.words = 200, # ~4 minutes
scale = c(5, 1),
color = c(rep("#AAAAAA", 1),
rep("#777777", 1),
rep("#555555", 1),
rep("#333333", 1),
rep("#111111")),
rot.per = 0.1,
random.order = FALSE)
wordcloud(sad_corpus, max.words = 200, # ~3 minutes
scale = c(5, 1),
color = c(rep("#AAAAAA", 1),
rep("#777777", 1),
rep("#555555", 1),
rep("#333333", 1),
rep("#111111")),
rot.per = 0.1,
random.order = FALSE)
wordcloud(sad_corpus, max.words = 200, # ~3 minutes
scale = c(5, 1),
color = c(rep("#AAAAAA", 1),
rep("#777777", 1),
rep("#555555", 1),
rep("#333333", 1),
rep("#111111")),
rot.per = 0.1,
random.order = FALSE)
wordcloud(sad_corpus, max.words = 200, # ~3 minutes
scale = c(5, 1),
color = c(rep("#AAAAAA", 1),
rep("#777777", 1),
rep("#555555", 1),
rep("#333333", 1),
rep("#111111")),
rot.per = 0.1,
random.order = FALSE)
load("~/Desktop/Huang Research/Rsentiment/emoticon.RData") # load emoticon/emoticon into memory as emoticon
load("functions.R")
source("functions.R")
load(file = paste(storage.directory, "sent140.RData", sep = ""))
sent140$AFINN.rating = classify.sentiment(sent140$clean)
colnames(ssent140)
colnames(sent140)
emoticon$AFINN.rating = classify.sentiment(emoticon$clean)
sent140$AFINN.rating.pred = sign(sent140$AFINN.rating)
table(sent140$AFINN.rating.pred)
ans = table(sent140$polarity, sent140$AFINN.rating.pred)
ans
