labs(x = "AFINN.score", y = "density") + ggtitle("AFINN.score densities over sent140")
ggplot(sent140, aes(sent140[,"AFINN.score"], fill = as.factor(polarity))) + geom_density(alpha = .2, adjust = 1) +
theme(axis.text = element_text(size = 25),
axis.title= element_text(size = 35),
plot.title= element_text(size = 40),
legend.text = element_text(size = 35),
legend.title = element_text(size = 35),
legend.position = "bottom") +
scale_fill_manual(values = c(2000,3),
labels = c(" negative   ", " positive"),
name = "Polarity:  ") +
labs(x = "AFINN.score", y = "density") + ggtitle("AFINN.score densities over sent140")
ggplot(sent140, aes(sent140[,"AFINN.score"], fill = as.factor(polarity))) + geom_density(alpha = .2, adjust = 1) +
theme(axis.text = element_text(size = 25),
axis.title= element_text(size = 35),
plot.title= element_text(size = 40),
legend.text = element_text(size = 35),
legend.title = element_text(size = 35),
legend.position = "bottom") +
scale_fill_manual(values = c(20000,3),
labels = c(" negative   ", " positive"),
name = "Polarity:  ") +
labs(x = "AFINN.score", y = "density") + ggtitle("AFINN.score densities over sent140")
ggplot(sent140, aes(sent140[,"AFINN.score"], fill = as.factor(polarity))) + geom_density(alpha = .2, adjust = 1) +
theme(axis.text = element_text(size = 25),
axis.title= element_text(size = 35),
plot.title= element_text(size = 40),
legend.text = element_text(size = 35),
legend.title = element_text(size = 35),
legend.position = "bottom") +
scale_fill_manual(values = c(100,3),
labels = c(" negative   ", " positive"),
name = "Polarity:  ") +
labs(x = "AFINN.score", y = "density") + ggtitle("AFINN.score densities over sent140")
ggplot(sent140, aes(sent140[,"AFINN.score"], fill = as.factor(polarity))) + geom_density(alpha = .2, adjust = 1) +
theme(axis.text = element_text(size = 25),
axis.title= element_text(size = 35),
plot.title= element_text(size = 40),
legend.text = element_text(size = 35),
legend.title = element_text(size = 35),
legend.position = "bottom") +
scale_fill_manual(values = c(20,3),
labels = c(" negative   ", " positive"),
name = "Polarity:  ") +
labs(x = "AFINN.score", y = "density") + ggtitle("AFINN.score densities over sent140")
ggplot(sent140, aes(sent140[,"AFINN.score"], fill = as.factor(polarity))) + geom_density(alpha = .2, adjust = 1) +
theme(axis.text = element_text(size = 25),
axis.title= element_text(size = 35),
plot.title= element_text(size = 40),
legend.text = element_text(size = 35),
legend.title = element_text(size = 35),
legend.position = "bottom") +
scale_fill_manual(values = c(20,3),
labels = c(" negative   ", " positive"),
name = "Polarity:  ") +
labs(x = "AFINN.score", y = "density") + ggtitle("AFINN.score densities over sent140")
ggplot(emoticon, aes(emoticon[,"AFINN.score"], fill = as.factor(polarity))) + geom_density(alpha = .2, adjust = 4) +
theme(axis.text = element_text(size = 25),
axis.title= element_text(size = 35),
plot.title= element_text(size = 40),
legend.text = element_text(size = 35),
legend.title = element_text(size = 35),
legend.position = "bottom") +
scale_fill_manual(values = c(20,3),
labels = c(" negative   ", " positive"),
name = "Polarity:  ") +
labs(x = "AFINN.score", y = "density") + ggtitle("AFINN.score densities over emoticon")
ggplot(sent140, aes(sent140[,"rf.score"], fill = as.factor(polarity))) + geom_density(alpha = .2) +
theme(axis.text = element_text(size = 25),
axis.title= element_text(size = 35),
plot.title= element_text(size = 40),
legend.text = element_text(size = 35),
legend.title = element_text(size = 35),
legend.position = "bottom") +
scale_fill_manual(values = c(20,3),
labels = c(" negative   ", " positive"),
name = "Polarity:  ") +
labs(x = "rf.score", y = "density") + ggtitle("rf.score densities over sent140")
ggplot(emoticon, aes(emoticon[,"rf.score"], fill = as.factor(polarity))) + geom_density(alpha = .2) +
theme(axis.text = element_text(size = 25),
axis.title= element_text(size = 35),
plot.title= element_text(size = 40),
legend.text = element_text(size = 35),
legend.title = element_text(size = 35),
legend.position = "bottom") +
scale_fill_manual(values = c(20,3),
labels = c(" negative   ", " positive"),
name = "Polarity:  ") +
labs(x = "rf.score", y = "density") + ggtitle("rf.score densities over emoticon")
help(ggsave)
ggplot(sent140, aes(sent140[,"AFINN.score"], fill = as.factor(polarity))) + geom_density(alpha = .2, adjust = 1) +
theme(axis.text = element_text(size = 25),
axis.title= element_text(size = 35),
plot.title= element_text(size = 40),
legend.text = element_text(size = 35),
legend.title = element_text(size = 35),
legend.position = "bottom") +
scale_fill_manual(values = c(20,3),
labels = c(" negative   ", " positive"),
name = "Polarity:  ") +
labs(x = "AFINN.score", y = "density") + ggtitle("AFINN.score densities over sent140")
help(file = "~/Desktop.", plot = last_plot("afinn.sent140.png"))
help(file = "~/Desktop/afinn.sent140.png", plot = last_plot())
help(file = "afinn.sent140.png", plot = last_plot())
help(filename = "afinn.sent140.png", plot = last_plot())
help(filename = "afinn_sent140.png", plot = last_plot())
help(filename = "afinn_sent140.png")
ggsave(filename = "afinn_sent140.png", plot = last_plot())
ggsave(filename = "afinn_sent140.png", plot = last_plot())
ggsave(filename = "afinn_sent140.png", plot = last_plot(), width = 10, height = 6)
ggsave(filename = "afinn_sent140.png", plot = last_plot(), width = 10, height = 8)
ggsave(filename = "afinn_sent140.png", plot = last_plot(), width = 12, height = 10)
ggplot(sent140, aes(sent140[,"AFINN.score"], fill = as.factor(polarity))) + geom_density(alpha = .2, adjust = 1) +
theme(axis.text = element_text(size = 25),
axis.title= element_text(size = 35),
plot.title= element_text(size = 40),
legend.text = element_text(size = 35),
legend.title = element_text(size = 35),
legend.position = "bottom") +
scale_fill_manual(values = c(20,3),
labels = c(" negative   ", " positive"),
name = "Polarity:  ") +
labs(x = "AFINN.score", y = "density") + ggtitle("AFINN.score densities over sent140")
ggsave(filename = "afinn.sent140.png", plot = last_plot(), width = 12, height = 10)
ggplot(emoticon, aes(emoticon[,"AFINN.score"], fill = as.factor(polarity))) + geom_density(alpha = .2, adjust = 4) +
theme(axis.text = element_text(size = 25),
axis.title= element_text(size = 35),
plot.title= element_text(size = 40),
legend.text = element_text(size = 35),
legend.title = element_text(size = 35),
legend.position = "bottom") +
scale_fill_manual(values = c(20,3),
labels = c(" negative   ", " positive"),
name = "Polarity:  ") +
labs(x = "AFINN.score", y = "density") + ggtitle("AFINN.score densities over emoticon")
ggsave(filename = "afinn.emoticon.png", plot = last_plot(), width = 12, height = 10)
ggplot(sent140, aes(sent140[,"rf.score"], fill = as.factor(polarity))) + geom_density(alpha = .2) +
theme(axis.text = element_text(size = 25),
axis.title= element_text(size = 35),
plot.title= element_text(size = 40),
legend.text = element_text(size = 35),
legend.title = element_text(size = 35),
legend.position = "bottom") +
scale_fill_manual(values = c(20,3),
labels = c(" negative   ", " positive"),
name = "Polarity:  ") +
labs(x = "rf.score", y = "density") + ggtitle("rf.score densities over sent140")
ggsave(filename = "rf.sent140.png", plot = last_plot(), width = 12, height = 10)
ggplot(emoticon, aes(emoticon[,"rf.score"], fill = as.factor(polarity))) + geom_density(alpha = .2) +
theme(axis.text = element_text(size = 25),
axis.title= element_text(size = 35),
plot.title= element_text(size = 40),
legend.text = element_text(size = 35),
legend.title = element_text(size = 35),
legend.position = "bottom") +
scale_fill_manual(values = c(20,3),
labels = c(" negative   ", " positive"),
name = "Polarity:  ") +
labs(x = "rf.score", y = "density") + ggtitle("rf.score densities over emoticon")
ggsave(filename = "rf.emoticon.png", plot = last_plot(), width = 12, height = 10)
ggplot(sent140, aes(rf.score, AFINN.score, color = polarity)) +
geom_point(size = 2) +
theme(axis.text = element_text(size = 20),
axis.title= element_text(size = 30),
plot.title= element_text(size = 36),
legend.text = element_text(size = 30),
legend.title = element_text(size = 30),
legend.position = "bottom") +
scale_fill_manual(values = c(2,3),
labels = c(" negative   ", " positive"),
name = "Polarity:  ") +
ggtitle("Sent140 Classifiers") +
xlab("rf.polarity") +
ylab("AFINN.polarity")     # <-- this is the first really good plot!
help(scale_fill_manual)
ggplot(sent140, aes(rf.score, AFINN.score, color = polarity)) +
geom_point(size = 2) +
theme(axis.text = element_text(size = 20),
axis.title= element_text(size = 30),
plot.title= element_text(size = 36),
legend.text = element_text(size = 30),
legend.title = element_text(size = 30),
legend.position = "bottom") +
scale_colour_manual(values = c(2,3),
labels = c(" negative   ", " positive"),
name = "Polarity:  ") +
ggtitle("Sent140 Classifiers") +
xlab("rf.polarity") +
ylab("AFINN.polarity")     # <-- this is the first really good plot!
ggplot(sent140, aes(rf.score, AFINN.score, color = polarity)) +
geom_point(size = 2) +
theme(axis.text = element_text(size = 20),
axis.title= element_text(size = 30),
plot.title= element_text(size = 36),
legend.text = element_text(size = 30),
legend.title = element_text(size = 30),
legend.position = "bottom") +
scale_colour_manual(values = c(20,3),
labels = c(" negative   ", " positive"),
name = "Polarity:  ") +
ggtitle("Sent140 Classifiers") +
xlab("rf.polarity") +
ylab("AFINN.polarity")     # <-- this is the first really good plot!
ggplot(emoticon, aes(jitter(rf.score), jitter(AFINN.score, factor = 2), color = polarity)) +
scale_fill_manual(values = c(2,3),
labels = c(" negative   ", " positive"),
name = "Polarity:  ") +
geom_point(size = 1, alpha = 0.5) +
theme(axis.text = element_text(size = 20),
axis.title= element_text(size = 30),
plot.title= element_text(size = 36),
legend.text = element_text(size = 30),
legend.title = element_text(size = 30),
legend.position = "bottom") +
scale_colour_manual(values = c(20,3),
labels = c(" negative   ", " positive"),
name = "Polarity:  ") +
ggtitle("Emoticon Classifiers") +
xlab("rf.polarity") +
ylab("AFINN.polarity")
set.seed(2016)
index = sample(nrow(emoticon), nrow(emoticon))
emoticon = emoticon[index,] #shuffle rows to mix up positives and negatives
ggplot(emoticon, aes(jitter(rf.score), jitter(AFINN.score, factor = 2), color = polarity)) +
geom_point(size = 1, alpha = 0.5) +
theme(axis.text = element_text(size = 20),
axis.title= element_text(size = 30),
plot.title= element_text(size = 36),
legend.text = element_text(size = 30),
legend.title = element_text(size = 30),
legend.position = "bottom") +
scale_colour_manual(values = c(20,3),
labels = c(" negative   ", " positive"),
name = "Polarity:  ") +
ggtitle("Emoticon Classifiers") +
xlab("rf.polarity") +
ylab("AFINN.polarity")     # <-- this is the second really good plot!
help(theme)
emoticon = emoticon[index,] #shuffle rows to mix up positives and negatives
ggplot(emoticon, aes(jitter(rf.score), jitter(AFINN.score, factor = 2), color = polarity)) +
geom_point(size = 1, alpha = 0.5) +
theme(axis.text = element_text(size = 20),
axis.title= element_text(size = 30),
plot.title= element_text(size = 36),
legend.text = element_text(size = 30),
legend.title = element_text(size = 30),
legend.key.size = 10
legend.position = "bottom") +
scale_colour_manual(values = c(20,3),
labels = c(" negative   ", " positive"),
name = "Polarity:  ") +
ggtitle("Emoticon Classifiers") +
xlab("rf.polarity") +
ylab("AFINN.polarity")
ggplot(emoticon, aes(jitter(rf.score), jitter(AFINN.score, factor = 2), color = polarity)) +
geom_point(size = 1, alpha = 0.5) +
theme(axis.text = element_text(size = 20),
axis.title= element_text(size = 30),
plot.title= element_text(size = 36),
legend.text = element_text(size = 30),
legend.title = element_text(size = 30),
legend.key.size = 10,
legend.position = "bottom") +
scale_colour_manual(values = c(20,3),
labels = c(" negative   ", " positive"),
name = "Polarity:  ") +
ggtitle("Emoticon Classifiers") +
xlab("rf.polarity") +
ylab("AFINN.polarity")
ggplot(emoticon, aes(jitter(rf.score), jitter(AFINN.score, factor = 2), color = polarity)) +
geom_point(size = 1, alpha = 0.5) +
theme(axis.text = element_text(size = 20),
axis.title= element_text(size = 30),
plot.title= element_text(size = 36),
legend.text = element_text(size = 30),
legend.title = element_text(size = 30),
legend.key.size = unit(2.5, "cm"),
legend.position = "bottom") +
scale_colour_manual(values = c(20,3),
labels = c(" negative   ", " positive"),
name = "Polarity:  ") +
ggtitle("Emoticon Classifiers") +
xlab("rf.polarity") +
ylab("AFINN.polarity")     # <-- this is the second really good plot!
ggplot(sent140, aes(rf.score, AFINN.score, color = polarity)) +
geom_point(size = 2) +
theme(axis.text = element_text(size = 20),
axis.title= element_text(size = 30),
plot.title= element_text(size = 36),
legend.text = element_text(size = 30),
legend.title = element_text(size = 30),
legend.position = "bottom") +
scale_colour_manual(values = c(20,3),
labels = c(" negative   ", " positive"),
name = "Polarity:  ") +
ggtitle("Sent140 Classifiers") +
xlab("rf.polarity") +
ylab("AFINN.polarity")     # <-- this is the first really good plot!
ggplot(sent140, aes(rf.score, AFINN.score, color = polarity)) +
geom_point(size = 2) +
theme(axis.text = element_text(size = 20),
axis.title= element_text(size = 30),
plot.title= element_text(size = 36),
legend.text = element_text(size = 30),
legend.title = element_text(size = 30),
legend.position = "bottom") +
scale_colour_manual(values = c(20,3),
labels = c(" negative   ", " positive"),
name = "Polarity:  ") +
ggtitle("Sent140 Classifiers") +
xlab("rf.polarity") +
ylab("AFINN.polarity")     # <-- this is the first really good plot!
ggsave(filename = "sent140.classifiers.png", plot = last_plot(), width = 12, height = 10)
set.seed(2016)
index = sample(nrow(emoticon), nrow(emoticon))
emoticon = emoticon[index,] #shuffle rows to mix up positives and negatives
ggplot(emoticon, aes(jitter(rf.score), jitter(AFINN.score, factor = 2), color = polarity)) +
geom_point(size = 1, alpha = 0.5) +
theme(axis.text = element_text(size = 20),
axis.title= element_text(size = 30),
plot.title= element_text(size = 36),
legend.text = element_text(size = 30),
legend.title = element_text(size = 30),
legend.position = "bottom") +
scale_colour_manual(values = c(20,3),
labels = c(" negative   ", " positive"),
name = "Polarity:  ") +
ggtitle("Emoticon Classifiers") +
xlab("rf.polarity") +
ylab("AFINN.polarity")     # <-- this is the second really good plot!
ggsave(filename = "emoticon.classifiers.png", plot = last_plot(), width = 12, height = 10)
ggplot(emoticon, aes(jitter(rf.score), jitter(AFINN.score, factor = 2), color = polarity)) +
geom_point(size = 2, alpha = 0.5) +
theme(axis.text = element_text(size = 20),
axis.title= element_text(size = 30),
plot.title= element_text(size = 36),
legend.text = element_text(size = 30),
legend.title = element_text(size = 30),
legend.position = "bottom") +
scale_colour_manual(values = c(20,3),
labels = c(" negative   ", " positive"),
name = "Polarity:  ") +
ggtitle("Emoticon Classifiers") +
xlab("rf.polarity") +
ylab("AFINN.polarity")     # <-- this is the second really good plot!
ggplot(emoticon, aes(jitter(rf.score), jitter(AFINN.score, factor = 2), color = polarity)) +
geom_point(size = 2, alpha = 0.3) +
theme(axis.text = element_text(size = 20),
axis.title= element_text(size = 30),
plot.title= element_text(size = 36),
legend.text = element_text(size = 30),
legend.title = element_text(size = 30),
legend.position = "bottom") +
scale_colour_manual(values = c(20,3),
labels = c(" negative   ", " positive"),
name = "Polarity:  ") +
ggtitle("Emoticon Classifiers") +
xlab("rf.polarity") +
ylab("AFINN.polarity")     # <-- this is the second really good plot!
emoticon = emoticon[index,] #shuffle rows to mix up positives and negatives
ggplot(emoticon, aes(jitter(rf.score), jitter(AFINN.score, factor = 2), color = polarity)) +
geom_point(size = 3, alpha = 0.3) +
theme(axis.text = element_text(size = 20),
axis.title= element_text(size = 30),
plot.title= element_text(size = 36),
legend.text = element_text(size = 30),
legend.title = element_text(size = 30),
legend.position = "bottom") +
scale_colour_manual(values = c(20,3),
labels = c(" negative   ", " positive"),
name = "Polarity:  ") +
ggtitle("Emoticon Classifiers") +
xlab("rf.polarity") +
ylab("AFINN.polarity")     # <-- this is the second really good plot!
ggplot(sent140, aes(rf.score, AFINN.score, color = polarity)) +
geom_point(size = 3) +
theme(axis.text = element_text(size = 20),
axis.title= element_text(size = 30),
plot.title= element_text(size = 36),
legend.text = element_text(size = 30),
legend.title = element_text(size = 30),
legend.position = "bottom") +
scale_colour_manual(values = c(20,3),
labels = c(" negative   ", " positive"),
name = "Polarity:  ") +
ggtitle("Sent140 Classifiers") +
xlab("rf.polarity") +
ylab("AFINN.polarity")     # <-- this is the first really good plot!
ggplot(sent140, aes(rf.score, AFINN.score, color = polarity)) +
geom_point(size = 3) +
theme(axis.text = element_text(size = 20),
axis.title= element_text(size = 30),
plot.title= element_text(size = 36),
legend.text = element_text(size = 30),
legend.title = element_text(size = 30),
legend.position = "bottom") +
scale_colour_manual(values = c(20,5),
labels = c(" negative   ", " positive"),
name = "Polarity:  ") +
ggtitle("Sent140 Classifiers") +
xlab("rf.polarity") +
ylab("AFINN.polarity")     # <-- this is the first really good plot!
ggplot(sent140, aes(rf.score, AFINN.score, color = polarity)) +
geom_point(size = 5) +
theme(axis.text = element_text(size = 20),
axis.title= element_text(size = 30),
plot.title= element_text(size = 36),
legend.text = element_text(size = 30),
legend.title = element_text(size = 30),
legend.position = "bottom") +
scale_colour_manual(values = c(20,3),
labels = c(" negative   ", " positive"),
name = "Polarity:  ") +
ggtitle("Sent140 Classifiers") +
xlab("rf.polarity") +
ylab("AFINN.polarity")     # <-- this is the first really good plot!
ggplot(emoticon, aes(jitter(rf.score), jitter(AFINN.score, factor = 2), color = polarity)) +
geom_point(size = 4, alpha = 0.3) +
theme(axis.text = element_text(size = 20),
axis.title= element_text(size = 30),
plot.title= element_text(size = 36),
legend.text = element_text(size = 30),
legend.title = element_text(size = 30),
legend.position = "bottom") +
scale_colour_manual(values = c(20,3),
labels = c(" negative   ", " positive"),
name = "Polarity:  ") +
ggtitle("Emoticon Classifiers") +
xlab("rf.polarity") +
ylab("AFINN.polarity")     # <-- this is the second really good plot!
ggplot(emoticon, aes(jitter(rf.score), jitter(AFINN.score, factor = 2), color = polarity)) +
geom_point(size = 10, alpha = 0.3) +
theme(axis.text = element_text(size = 20),
axis.title= element_text(size = 30),
plot.title= element_text(size = 36),
legend.text = element_text(size = 30),
legend.title = element_text(size = 30),
legend.position = "bottom") +
scale_colour_manual(values = c(20,3),
labels = c(" negative   ", " positive"),
name = "Polarity:  ") +
ggtitle("Emoticon Classifiers") +
xlab("rf.polarity") +
ylab("AFINN.polarity")     # <-- this is the second really good plot!
emoticon = emoticon[index,] #shuffle rows to mix up positives and negatives
ggplot(emoticon, aes(jitter(rf.score), jitter(AFINN.score, factor = 2), color = polarity)) +
geom_point(size = 4, alpha = 0.3) +
theme(axis.text = element_text(size = 20),
axis.title= element_text(size = 30),
plot.title= element_text(size = 36),
legend.text = element_text(size = 30),
legend.title = element_text(size = 30),
legend.position = "bottom") +
scale_colour_manual(values = c(20,3),
labels = c(" negative   ", " positive"),
name = "Polarity:  ") +
ggtitle("Emoticon Classifiers") +
xlab("rf.polarity") +
ylab("AFINN.polarity")     # <-- this is the second really good plot!
ggsave(filename = "emoticon.classifiers.png", plot = last_plot(), width = 12, height = 10)
ggplot(sent140, aes(rf.score, AFINN.score, color = polarity)) +
geom_point(size = 4) +
theme(axis.text = element_text(size = 20),
axis.title= element_text(size = 30),
plot.title= element_text(size = 36),
legend.text = element_text(size = 30),
legend.title = element_text(size = 30),
legend.position = "bottom") +
scale_colour_manual(values = c(20,3),
labels = c(" negative   ", " positive"),
name = "Polarity:  ") +
ggtitle("Sent140 Classifiers") +
xlab("rf.polarity") +
ylab("AFINN.polarity")     # <-- this is the first really good plot!
ggsave(filename = "sent140.classifiers.png", plot = last_plot(), width = 12, height = 10)
ggplot(emoticon, aes(jitter(rf.score), jitter(AFINN.score, factor = 2), color = polarity)) +
geom_point(size = 3, alpha = 0.2) +
theme(axis.text = element_text(size = 20),
axis.title= element_text(size = 30),
plot.title= element_text(size = 36),
legend.text = element_text(size = 30),
legend.title = element_text(size = 30),
legend.position = "bottom") +
scale_colour_manual(values = c(20,3),
labels = c(" negative   ", " positive"),
name = "Polarity:  ") +
ggtitle("Emoticon Classifiers") +
xlab("rf.polarity") +
ylab("AFINN.polarity")     # <-- this is the second really good plot!
ggplot(emoticon, aes(jitter(rf.score), jitter(AFINN.score, factor = 2), color = polarity)) +
geom_point(size = 4, alpha = 0.3) +
theme(axis.text = element_text(size = 20),
axis.title= element_text(size = 30),
plot.title= element_text(size = 36),
legend.text = element_text(size = 30),
legend.title = element_text(size = 30),
legend.position = "bottom") +
scale_colour_manual(values = c(20,3),
labels = c(" negative   ", " positive"),
name = "Polarity:  ") +
ggtitle("Emoticon Classifiers") +
xlab("rf.polarity") +
ylab("AFINN.polarity")     # <-- this is the second really good plot!
ggsave(filename = "emoticon.classifiers.png", plot = last_plot(), width = 12, height = 10)
ggmap("Los Angeles County")
library(ggmap)
ggmap("Los Angeles County")
LAmapget_map("Los Angeles County")
LAmap = get_map("Los Angeles County")
print(LAmap)
ggmap(LAmap)
q()
